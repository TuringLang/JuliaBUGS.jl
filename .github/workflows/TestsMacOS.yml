name: Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'DoodleBUGS/**'
  pull_request:
    paths-ignore:
      - 'DoodleBUGS/**'
  workflow_dispatch:

jobs:
  test:
    name: Julia ${{ matrix.version }} on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'pre' }}
    strategy:
      fail-fast: false
      matrix:
        version: ['1', 'min', 'pre']
        os: [macOS-latest]
        arch: [aarch64]

    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      
      - uses: actions/cache@v4
        with:
          path: |
            ~/.julia
            ~/.julia/artifacts
          key: ${{ runner.os }}-julia-${{ matrix.version }}-${{ matrix.arch }}-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ matrix.version }}-${{ matrix.arch }}-
            ${{ runner.os }}-julia-${{ matrix.version }}-
      
      - uses: julia-actions/julia-buildpkg@v1

      - name: Running elementary tests
        uses: julia-actions/julia-runtest@v1
        env:
          TEST_GROUP: "elementary"

      - name: Running compilation tests
        uses: julia-actions/julia-runtest@v1
        env:
          TEST_GROUP: "compilation"

      - name: Running `log_density` tests
        uses: julia-actions/julia-runtest@v1
        env:
          TEST_GROUP: "log_density"

      - name: Running `source_gen` tests
        uses: julia-actions/julia-runtest@v1
        env:
          TEST_GROUP: "source_gen"

      - name: Running `gibbs` tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: julia --color=yes --project=. -e "import Pkg; Pkg.instantiate(); Pkg.test(coverage=true);"
        env:
          TEST_GROUP: "gibbs"

      - name: Running `mcmchains` tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: julia --color=yes --project=. -e "import Pkg; Pkg.instantiate(); Pkg.test(coverage=true);"
        env:
          TEST_GROUP: "mcmchains"

      - name: Running `experimental` tests
        uses: julia-actions/julia-runtest@v1
        env:
          TEST_GROUP: "experimental"

